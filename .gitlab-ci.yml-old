
image: acr2.tst.apnic.net/base/maven:3.5-jdk-8

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
# As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
# when running from the command line.
# `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

stages:
  - facts
  - build
  - test
  - package

cache:
  paths:
    - .m2/repository

fact-gathering:
  stage: facts
  script:
    - export PROJECT_VERSION=`mvn -B help:evaluate -Dexpression=project.version | grep -vE "^(\[INFO\]|Downloaded)"`
    - echo $PROJECT_VERSION

compile:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS test-compile'

verify:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'

package-jar:
  stage: package
  script:
    - 'mvn $MAVEN_CLI_OPTS package'
  artifacts:
    paths:
      - target/*.jar

docker-image-non-master:
  image: acr2.tst.apnic.net/base/docker:18.02
  stage: package
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - branches
  except:
    - master
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_REGISTRY_BASE: "acr2.tst.apnic.net/rdapd"
  services:
    - acr2.tst.apnic.net/base/docker:18.02-dind
  script:
    - echo ${PROJECT_VERSION}
    - docker build . -t $DOCKER_REGISTRY_BASE:${PROJECT_VERSION}-${CI_COMMIT_REF_SLUG}
    - docker push $DOCKER_REGISTRY_BASE:$CI_COMMIT_REF_SLUG

docker-image-master:
  image: acr2.tst.apnic.net/base/docker:18.02
  stage: package
  environment:
    name: $CI_COMMIT_REF_SLUG
  only:
    - master
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_REGISTRY_BASE: "acr2.apnic.net/rdapd"
  services:
    - acr2.tst.apnic.net/base/docker:18.02-dind
  script:
    - docker build . -t $DOCKER_REGISTRY_BASE:$PROJECT_VERSION
    - docker push $DOCKER_REGISTRY_BASE:$CI_COMMIT_REF_SLUG
