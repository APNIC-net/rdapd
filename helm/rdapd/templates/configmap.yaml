apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "application.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "application.fullname" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ template "application.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  application.yml: |2

    # Settings to specifically control the RDAP protocol used by this application.
    rdap:

      # A list of default notices that get appended to each RDAP response from this
      # server. Notice objects take the following structure.
      # title: # Title of the notice
      # description: # List of string describing the notice
      # links: # List of link objects in the folloing form.
      #   - href: # href value as per RDAP spec
      #     rel: #ref value as per RDAP spec
      #     type: #type of link
      notices:
        - title: Source
          description:
            - Objects returned came from source
            - APNIC
        - title: Terms and Conditions
          description:
            - This is the APNIC WHOIS Database query service. The objects are in RDAP format.
          links:
            - href: "http://www.apnic.net/db/dbcopyright.html"
              rel: "terms-of-service"
              type: "text/html"

      # Enables history endpoints (https://github.com/APNIC-net/rdap-history).
      # If this setting is omitted, history endpoints will be active.
      historyEndpointsEnabled: ${RDAPD_HISTORY_ENDPOINTS_ENABLED}

      # Port43 value for RDAP responses
      port43: whois.apnic.net

    spring:
      application:

      datasource:
        url: "jdbc:mysql://${RDAPD_DB_HOST}:3306/${RDAPD_DB_NAME}?useunicode=true&characterencoding=utf8&charactersetresults=utf8&useSSL=false"
        username: "${RDAPD_DB_USERNAME}"
        password: "${RDAPD_DB_PASSWORD}"

    management:
      port: 8081

    rpslData:
      # FTP URI for the RPSL dump file.
      # E.g.: "ftp://user:password@ftp.apnic.net/pub/incoming/krnic/krnic.db.tar.gz"
      uri: ${RDAP_RPSL_DATA_URI}
      # Cron expression for loading RPSL data (Spring format - i.e. includes seconds).
      updateCronExpr: ${RDAP_RPSL_DATA_UPDATE_CRON_EXPR}

